Script started on 2023-09-04 07:01:23-07:00 [TERM="screen" TTY="/dev/pts/5" COLUMNS="136" LINES="32"]
[?2004hbrandon@think001:~/projects/miscellaneous-scripts/modbus_test$ python3
[?2004lPython 3.11.2 (main, Mar 13 2023, 12:18:29) [GCC 12.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import minimalmodbus
>>> instr = minimalmodbus.Instrument("/dev/ttyUSB0", 1)
>>> instr.serial.baudrate = 38400
>>> instr.serial.timeout / [K[K= 0x[K.01
>>> nistr[K[K[K[K[Kinstr.read_register([Ks(0x00, 1)
[130]
>>> instr.read_registers(0x00, 1)[C[C[C[C[Kinstr.write_registers(0x11[K[K02[K1, 0xDEFA)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 965, in write_registers
    raise TypeError(
TypeError: The "values parameter" must be a list. Given: 57082
>>> instr.write_registers(0x01, 0xDEFA)[C,0xDEFA) 0xDEFA)[1@1[1P[C[C[C[C[C[C[C[C[C[1P 0xDEFA)[1P 0xDEFA)[1P0xDEFA)[1P 0xDEFA), 0xDEFA)[C 0xDEFA)[C[1P0xDEFA)[C[C[C[C[C[C[C
>>> instr.write_register(x0[K[K0x01, 0x5FFA[K[KAF)
>>> instr.write_register(0x01, 0xDEFA)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x01P' instead of b'\x1c\x90' . The response is: b'\x01\x10\x00\x01\x00\x01P' (plain response: b'\x01\x10\x00\x01\x00\x01P')
>>> 0x40[K[K[K[Kinstr.read_register(0x00, 1)
0.2
>>> instr.read_register(0x00, 1)[1@s
[2]
>>> nistr[K[K[K[K[Kinstr.read_registers(0x00, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.[K.address
1
>>> instr.address = 255
>>> instr.address = 255[Kread_registers(0x00, 1)
[194]
>>> instr.write_
instr.write_bit(        instr.write_float(      instr.write_register(   instr.write_string(     
instr.write_bits(       instr.write_long(       instr.write_registers(  
>>> instr.write_register(0x02, [K[K[K1 ,[K[K, 0xDEFA)  [B[C[C[C[C[C[C[C[C[C[C[9Pread_registers(0x00, 1)[C[C[C[C[C[C[C[C[C[Cwrite_register(0x01, 0xDEFA)  [B[K[K[K
>>> instr.read_regisee[K[Kter(0x01, 0x[K[K[K[K, 0 [K[K1)
0.2
>>> instr.read_register(0x01, 1)[C[1@S
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Instrument' object has no attribute 'read_registerS'. Did you mean: 'read_registers'?
>>> instr.read_registerS(0x01, 1)[C[1P[1@s
[2]
>>> instr.read_registers(0x02 [K, 1)
[511]
>>> instr.write_register(0x02, 127)[K[K8[K7)[K[K[K[K257)
>>> instr.read_registers(0x02, 1)
[257]
>>> instr. [Kwrite_register(0x01, 0x5FAF)
>>> instr.read_register(0x00, 1)[1@s
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> inn[Kstr.address = 1
>>> instr.address = 1read_registers(0x00, 1)
[194]
>>> instr.write_register(0x02, 0x258)[K[K[K[K[K[K258)
>>> instr.ea[K[Kread_registers(0x01, 1)
[3]
>>> instr.read_registers(0x01, 1)[1P[1@2
[257]
>>> instr.wrt[Kite_register(0x02, 258)
>>> instr.read_register(0x02, 258)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 477, in read_register
    _check_int(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3924, in _check_int
    _check_numerical(inputvalue, minvalue, maxvalue, description)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3987, in _check_numerical
    raise ValueError(
ValueError: The number of decimals is too large: 258, but maximum value is 10.
>>> instr.read_register(0x02, 258)[K[K[K[K10[K[K1)
25.7
>>> instr.read_register(0x02, 1)[1@s
[257]
>>> instr.addrers[K[Kss = 255
>>> is[Knstr.read_regiset[K[Kters(0x00, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.[K[K[K[K[K[Kinstr.read_registers(0x00, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_registers(0x00, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> in[K[Kinstr.read_registers(0x00, 2)
[194, 0]
>>> instr.read_registers(0x00, 2)
[194, 0]
>>> instr.write_registers(0x02[K1, x[K0xDEFA)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 965, in write_registers
    raise TypeError(
TypeError: The "values parameter" must be a list. Given: 57082
>>> instr.write_registers(0x01, 0xDEFA)[1P
>>> instr.read_register(0x01)[K[K[K[K[K[Ks(0x01, 1)
[2]
>>> instr.read_[K[K[K[Kw[K[Kwrite_register(0x02, 1[K257)
>>> nis[K[K[Kinstr.read_register(0x1[K01, [K[K, 1)
0.2
>>> instr.read_register(0x01, 1)[1@s
[2]
>>> instr.read_registers(0x01, 1)[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Knistr.[K[K[K[K[K[Knistr.write_e[Kregister(0x01, 0x5f[KFAF)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'nistr' is not defined. Did you mean: 'instr'?
>>> nistr.write_register(0x01, 0x5FAF)[1P[1P[1@i[1@n
>>> inst.[Kr.read_register(0x01, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read[K[K[K[Kwrite-R[K[K_register( [K0x01, [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kinstr.address = 1
>>> instr.e[Kread_register(0x01, 1)
0.3
>>> instr.read_register(0x01, 1)[1@s
[3]
>>> instr.write_register(0x0,[K2, 258)
>>> instr.read_register(00[Kx02, [K[K[K[K[K[K[Ks ([K[K(0x02, 1)
[257]
>>> instr.read_registers(0x02, 1)[C[1P[1@6
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.IllegalRequestError: Slave reported illegal data address
>>> instr.read_registers(0x06, 1)2[C[C[C[C[C[C[C[C[C[C[C[C[C[Cwrite_register(0x02, 258)
>>> instr.write_register(0x02, 258)[1P[1@6
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.IllegalRequestError: Slave reported illegal data address
>>> instr.write_register(0x06, 258)[1P[1@4[1P[1@2
>>> instr.write_register(0x02, 258)
>>> instr.write_register(0x02, 258)
>>> instr.write_register(0x02, 258)
>>> instr.write_register(0x02, 258)[C[C[C[C[Kn[Kinstr.debug = 1
>>> instr.debug = 1write_register(0x02, 258)
MinimalModbus debug mode. Will write to instrument (expecting 8 bytes back): 01 10 00 02 00 01 02 01 02 27 E3 (11 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 53066.03 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: 01 10 00 02 00 01 A0 09 (8 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

>>> instr.write_register(0x02, 258)[1P[1@6
MinimalModbus debug mode. Will write to instrument (expecting 8 bytes back): 01 10 00 06 00 01 02 01 02 26 67 (11 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 31574.46 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: 01 90 02 CD C1 (5 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.IllegalRequestError: Slave reported illegal data address
>>> instr.write_register(0x06, 258)[C[C[C[C[Kinstr.address = 255
>>> instr.read(0x00, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Instrument' object has no attribute 'read'
>>> instr.read(0x00, 2)[1@_[1@r[1@e[1@g[1@i[1@s[1@t[1@e[1@r[1@s
MinimalModbus debug mode. Will write to instrument (expecting 9 bytes back): FF 03 00 00 00 02 D1 D5 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 747474.15 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 04 00 C2 00 00 44 00 (9 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

[194, 0]
>>> instr.debug = 0
>>> instr.read[K[K[K[Kread_register(00[Kx02[K3[K2,1[K[K'[K, 1)[1@s
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.SlaveReportedException: Slave reported device failure
>>> git[K[K[Kmodus[K[Kbus thngs[K[K[K[K[K[K[K[K[K[K[K[Kinstr.read[K[K[K[Kwrite_register()[K[K(0x02[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kinstr.read_registers(0x02, 1)[C[C[C[C[Kinstr.read_registers(0x02, 1)[C[C[C[C[Kinstr.read_registers(0x02, 1)[C[C[C[C[Kinstr.read_registers(0x02, 1)[C[C[C[C[Kinstr.read_registers(0x02, 1)[C[C[C[1P[1P[1P[1P[1@w[1@r[1@i[1@t[1@e[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P[1@6[1P[1@1[1@6[1P[1P[1@2[C[C[C,) )f)u)n)c)t)i)o)n)c)a)d)e)[1P)[1P)[1P)o)d)e)=)6)[1P
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.SlaveReportedException: Slave reported device failure
>>> instr.write_register(0x02, 1, functioncode=6)[C[C[C[C[Kinstr.write_register(0x02, 1, functioncode=6)[C[C[C[C[Kinstr.write_register(0x02, 1, functioncode=6)[C[C[C[C[Kinstr.write_register(0x02, 1, functioncode=6)[C[C[C[C[Kinstr.write_register(0x02, 1, functioncode=6)[C[1@s[1P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C16)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.SlaveReportedException: Slave reported device failure
>>> instr.write_register(0x02, 1, functioncode=16)[1P6)[C[C[C[C[C[C[C[C[C[C[16Pread_registers(0x02, 1)[C[C[C[C[C[C[C[C[C[C[14Pdebug = 0read_registers(0x00, 2)
[194, 0]
>>> instr.write_register(0x02, [K[K[K1, 0xDEFA)
>>> instr.read_registers(0x020[K[K0, 2)
[194, 2]
>>> instr.write_register [K([K(00x[K[Kx01, 0xD[KDEFA[K[K[K[K5FAF)
>>> instr.read_register(x0[K[K0x0[K[K[K[Ks(0x01, 1)
[2]
>>> instr.write_register(0x01, x0[K[K0x5FAF[K[K[K[K[K[K[K[K [K, [K[K[K2, 257)
>>> instr.read_register(0x02, 1)[1@s
[257]
>>> instr.write_register(0x02[K1[K1, 0x5FAF)
>>> intr[K[Kstr.read_registers[K([K-([K[Ks(0x01, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.address=0x[K[K1000[K[K[K[K1000[K[K[K[K1000[K[K[K[Kl[K1000[K[K[K[K100[K[K[K1000[K[K[K[K1
>>> instr.read_e[Kregisters(0x01[K0, 1)
[194]
>>> instr.write_register(0x01[K2, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.SlaveReportedException: Slave reported device failure
>>> instr.write_register(0x02, 1),) )f)u)n)c)t)i)o)n)c)o)d)e)=)6)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.SlaveReportedException: Slave reported device failure
>>> that[K[K[K[Kcm[K[Kinstr.write_register(0x02, 0x0000)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.SlaveReportedException: Slave reported device failure
>>> instr.write_register(0x02, 0x0000)[C[1P[1@1
>>> instr.readS[K_registers(0x0[K[K[K0x01, [K[K[K0, 2)
[194, 0]
>>> instr.write_register(0x01 [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kinstr.write_register(0x01, 0xEFA[K[K[KDEA[KFA)
>>> instr.write_register(0x [K02, 512)
>>> instr.read_registr[Ker(0x02)[K[K[K[K[K[Ks(0x02)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: Instrument.read_registers() missing 1 required positional argument: 'number_of_registers'
>>> instr.read_registers(0x02),) )1)
[513]
>>> instr.read_[K[K[K[K[Kwrite_register(0x02, 258[K7) [K[K[K8[K7) [K[K[K[K[K257)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_registers [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kinstr.read[K[K[K[Kaddress
1
>>> instr.address = 255
>>> instr.write_register(0x02[K1, [K[K[K1, 0xDEFA)
>>> instr.read_regsiter(0x01)[K[K1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Instrument' object has no attribute 'read_regsiter'. Did you mean: 'read_register'?
>>> instr.read_regsiter(0x01)[C[C[C[C[1Pter(0x01)[1Pter(0x01)iter(0x01)ster(0x01)
2
>>> inl[Kstr.rea[K[K[Kwrite_register(0x012[K[K2, 0x[K[K257[K7)
>>> instr.read_rge[K[Kegister(0x02)
257
>>> instr.write_register(0x01, 0x5FAF
... instr.read_register(0x02)
  File "<stdin>", line 1
    instr.write_register(0x01, 0x5FAF
                               ^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>> instr[K[K[K[K[Kinstr.write([K_regxs[K[Kister(0 0[K[Kx01, 0xF[K5FAF)
>>> is[Knstr.read_register(0x02)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.write_re[K[K[K[K[K[K[K[Kaddress / `[K[K[K= 1
>>> is[Knstr.read_register0x[K[K(0x2[K021[K[K1)
3
>>> instr.read-[K_register(0x0[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kwrite_register(0x02, 0x01[K[K[K[K[K[K[K1 ,[K[K, 0x02)[K[K[K10[K[K[K[K[K 0x0000)
>>> instr.read_register(0x01)
0
>>> instr.write_register(0x01, 0x5[KDEFA)
>>> instr.read_register(0x01,[K)
2
>>> instr.write_register(0x02, 0x513)[K[K[K[K[K[K513)
>>> instr.read_register)0x[K[K[K(0x01,[K)
2
>>> instr.write_register(0x01, 0x5FAF)
>>> un[K[Kinstr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> nistr.[K[K[K[K[K[Knistr.[K[K[K[K[K[Kinstr.baud = 35[K8[K[K19200
>>> instr.read_register [K(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.timeout = 0x1[K[K.1
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.address
1
>>> instr.adddress = [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kinstr.add[K[K[Kbaud = 19300[K[K[K200
>>> instr.read_registers(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: Instrument.read_registers() missing 1 required positional argument: 'number_of_registers'
>>> instr.read_registers(0x01).)1)[1P)[1P),) )1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_registers(0x01[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
>>> 
>>> 
>>> 
>>> 
>>> 
>>> instr.read_registers(0x01, 1)[C[C[C[C[Kinstr.baud = 38400
>>> instr.address = 2
>>> instr.read_register(0x01[K)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> n[Kinstr.baud = 19200
>>> instr.read_addse[K[Kr[Kdress[K[K[K[K[K[K[K[Kregister_[K(0x01[K)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.address
2
>>> instr.address = 1
>>> instr.read_address(0x00)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Instrument' object has no attribute 'read_address'
>>> instr.read_address(0x00)[C[C[1P(0x00)[1P(0x00)[1P(0x00)[1P(0x00)[1P(0x00)[1P(0x00)[1P(0x00)r(0x00)e(0x00)g(0x00)i(0x00)s(0x00)t(0x00)e(0x00)r(0x00)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_register(0x00)[C[C[C[C[Kinstr.read_register(0x00)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.baud = [K[K[K[K[K[K[K
instr.address                                instr.read_bits(                             instr.write_bit(
instr.baud                                   instr.read_float(                            instr.write_bits(
instr.clear_buffers_before_each_transaction  instr.read_long(                             instr.write_float(
instr.close_port_after_each_call             instr.read_register(                         instr.write_long(
instr.debug                                  instr.read_registers(                        instr.write_register(
instr.handle_local_echo                      instr.read_string(                           instr.write_registers(
instr.mode                                   instr.roundtrip_time                         instr.write_string(
instr.precalculate_read_size                 instr.serial                                 
instr.read_bit(                              instr.timeout                                
>>> instr.
instr.address                                instr.read_bits(                             instr.write_bit(
instr.baud                                   instr.read_float(                            instr.write_bits(
instr.clear_buffers_before_each_transaction  instr.read_long(                             instr.write_float(
instr.close_port_after_each_call             instr.read_register(                         instr.write_long(
instr.debug                                  instr.read_registers(                        instr.write_register(
instr.handle_local_echo                      instr.read_string(                           instr.write_registers(
instr.mode                                   instr.roundtrip_time                         instr.write_string(
instr.precalculate_read_size                 instr.serial                                 
instr.read_bit(                              instr.timeout                                
>>> instr.serial.baud = 38[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kinstr.address = 1[K255
>>> instr.address = 255[C[C[C[C[C[C[C[C[C[Cread_register(0x00)
194
>>> instr.write_address[K[K[K[K[K[K[K[K[K[K[K[K[Kwrite_register(00[Kx2, 0xdefa[K[K[K[K[KDEFA[K[K[K[KxDA[KEFA)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.SlaveReportedException: Slave reported device failure
>>> instr.write_register(0x2, 0xDEFA)[1P[1@1
>>> instr.write_registe[K[Kter(0x02, 512[K3)
>>> instr.write_register(0x01, x[K0x5FAF)
>>> instr.serial.baudrate = 19200
>>> instr.ad[K[K[K[K[K[K[Kins[K[K[K[Kinstr.read_address[K[K[K[K[K[K[Kregister_9x^?[K[K[K[K(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_register(0x01)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 19200[K[K[K[K[K384000[K
>>> instr.serial.baudrate = 38400[C[C[C[C[C[C[C[C[C[C[4Pread_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_register(0x01)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 38400[K[K[K[K[K19200
>>> instr.[K[K[K[K[K[Kinstr
minimalmodbus.Instrument<id=0x7f6eb67ad9d0, address=255, mode=rtu, close_port_after_each_call=False, precalculate_read_size=True, clear_buffers_before_each_transaction=True, handle_local_echo=False, debug=0, serial=Serial<id=0x7f6eb6762860, open=True>(port='/dev/ttyUSB0', baudrate=19200, bytesize=8, parity='N', stopbits=1, timeout=0.01, xonxoff=False, rtscts=False, dsrdtr=False)>
>>> instr.timeout=0.1
>>> instr.address = 1
>>> instr.address = 1timeout=0.1[C[C[C[C[C[C[C[C[C[K.serial.baudrate = 19200[C[C[C[C[C[C[C[C[C[C[4Pread_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x01)[C[C[C[C[C[C[C[C[C[C[8Paddress = 1timeout=0.1[K2
>>> instr.timeout=0.2read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x00\x03' instead of b'\xa11' . The response is: b'\x01\x03\x02\x00\x03' (plain response: b'\x01\x03\x02\x00\x03')
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x00\x03' instead of b'\xa11' . The response is: b'\x01\x03\x02\x00\x03' (plain response: b'\x01\x03\x02\x00\x03')
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x01)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x01)[C[C[C[C[Kinstr.read_register(0x01)[C[C[C[C[C[C[C[C[C[C[8Ptimeout=0.2read_register(0x01)[C[C[C[C[Kinstr.read_register(0x01)[C[C[C[C[Kinstr.read_register(0x01)[C[C[C[C[Kinstr.read_register(0x01)[C[C[C[C[C[C[C[C[C[C[8Ptimeout=0.2read_register(0x01)[C[C[C[C[C[C[C[C[C[C[8Paddress = 1timeout=0.1[C[C[C[C[C[C[C[C[C[K.serial.baudrate = 19200[C[C[C[C[C[C[C[C[C[C[4Pread_register(0x01)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 38400[C[C[C[C[C[C[C[C[C[C[4Pread_register(0x01)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 38400[C[C[C[C[C[C[C[C[C[C[4Pread_register(0x01)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 19200[C[C[C[C[C[C[C[C[C[K.timeout=0.1address = 1read_register(0x01)[C[C[C[C[C[C[C[C[C[C[8Ptimeout=0.2read_register(0x01)[C[C[C[C[Kinstr.read_register(0x01)[1P)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x00\xc2' instead of b'\xa11' . The response is: b'\x01\x03\x02\x00\xc2' (plain response: b'\x01\x03\x02\x00\xc2')
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)[C[C[C[C[Kinstr.debug = 1
>>> instr.debug = 1read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 36694.15 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 4778.45 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)[C[C[C[C[C[C[C[C[C[C[9Pdebug = 1read_register(0x0)1)[C[C[C[C[C[C[C[C[C[C[8Ptimeout=0.2read_register(0x01)[C[C[C[C[C[C[C[C[C[C[8Paddress = 1timeout=0.1[C[C[C[C[C[C[C[C[C[K.serial.baudrate = 19200[C[C[C[C[C[C[C[C[C[C[4Pread_register(0x01)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 38400[C[C[C[C[C[C[C[C[C[C[4Pread_register(0x01)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 19200
>>> instr.serial.baudrate = 19200[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)[C[C[C[C[C[C[C[C[C[C[9Pdebug = 1read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 27232.21 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)[C[C[C[C[Kmo[K[Kinstr.serial.baudrate = 19100[K[K400
>>> instr.serial.baudrate = 191400[C[C[C[C[C[C[C[C[C[C[6Pread_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 19200[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 671897.45 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument:  (0 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1663.91 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument:  (0 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1029.06 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument:  (0 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 191400[C[C[C[C[C[C[C[C[C[C[6Pread_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 191400[K[K[K[K200[K[K40
>>> instr.serial.baudrate = 19240[1P40140
>>> instr.serial.baudrate = 19140240[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 191400[C[C[C[C[C[C[C[C[C[C[6Pread_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 15116.66 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 5543.77 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 869.11 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 C2 (5 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x00\xc2' instead of b'\xa11' . The response is: b'\x01\x03\x02\x00\xc2' (plain response: b'\x01\x03\x02\x00\xc2')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1976.57 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 974.79 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 745.77 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 754.94 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 19140[K[K[K200
>>> instr.serial.baudrate = 19200[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 19140[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 6785.04 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 875.30 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 618.37 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 601.71 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 607.60 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 624.18 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 925.92 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 769.25 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1150.73 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 736.61 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 751.68 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 19200[K[K[K100
>>> instr.serial.baudrate = 19100[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 19100[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 7314.58 ms, minimum silent period: 2.02 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 3105.46 ms, minimum silent period: 2.02 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1066.68 ms, minimum silent period: 2.02 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1071.41 ms, minimum silent period: 2.02 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 615.33 ms, minimum silent period: 2.02 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 627.06 ms, minimum silent period: 2.02 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 757.08 ms, minimum silent period: 2.02 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 19100[K[K[K200[K[K[K3000[K[K[K[K200
>>> instr.
instr.address                                instr.read_bits(                             instr.write_bit(
instr.baud                                   instr.read_float(                            instr.write_bits(
instr.clear_buffers_before_each_transaction  instr.read_long(                             instr.write_float(
instr.close_port_after_each_call             instr.read_register(                         instr.write_long(
instr.debug                                  instr.read_registers(                        instr.write_register(
instr.handle_local_echo                      instr.read_string(                           instr.write_registers(
instr.mode                                   instr.roundtrip_time                         instr.write_string(
instr.precalculate_read_size                 instr.serial                                 
instr.read_bit(                              instr.timeout                                
>>> instr.timeout
instr.timeout
>>> instr.timeout
instr.timeout
>>> instr.timeout
instr.timeout
>>> instr.timeout / [K[K= 0.[K[K1
>>> instr.timeout = 1serial.baudrate = 19200[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 19100[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 100379.20 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 893.05 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 C2 (5 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x00\xc2' instead of b'\xa11' . The response is: b'\x01\x03\x02\x00\xc2' (plain response: b'\x01\x03\x02\x00\xc2')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 689.40 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1150.29 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1810.42 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1050.05 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 832.21 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1137.56 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 656.28 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 829.36 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 622.33 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 575.65 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 693.89 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 645.84 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 607.64 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 609.41 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 583.20 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 2153.56 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 649.99 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 742.67 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 649.68 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 717.97 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 690.58 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1340.94 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 664.29 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1148.90 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 671.24 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 696.73 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 796.44 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 853.55 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 748.53 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 677.28 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1317.46 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 C2 (5 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x00\xc2' instead of b'\xa11' . The response is: b'\x01\x03\x02\x00\xc2' (plain response: b'\x01\x03\x02\x00\xc2')
>>> instr.read_register(0x0)[C[C[C[C[C[C[C[C[C[C[7Ptimeout = 1read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 15820.26 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 2284.12 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 3101.22 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1239.26 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1654.79 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1758.65 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 558.62 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 450.49 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 888.80 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 548.96 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 475.24 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 526.42 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 529.68 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 544.16 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 10557.57 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 868.33 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 902.64 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 895.36 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 C2 (5 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x00\xc2' instead of b'\xa11' . The response is: b'\x01\x03\x02\x00\xc2' (plain response: b'\x01\x03\x02\x00\xc2')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 854.11 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 584.36 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 (2 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 619.67 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 679.52 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 613.77 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 (3 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1846, in _extract_payload
    raise InvalidResponseError(
minimalmodbus.InvalidResponseError: Too short Modbus RTU response (minimum length 4 bytes). Response: b'\x01\x03\x02'
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 662.90 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 (4 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x02\x00' instead of b'@!' . The response is: b'\x01\x03\x02\x00' (plain response: b'\x01\x03\x02\x00')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 745.76 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument: 01 03 02 00 C2 (5 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1904, in _extract_payload
    raise InvalidResponseError(text)
minimalmodbus.InvalidResponseError: Checksum error in rtu mode: b'\x00\xc2' instead of b'\xa11' . The response is: b'\x01\x03\x02\x00\xc2' (plain response: b'\x01\x03\x02\x00\xc2')
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 171618.45 ms, minimum silent period: 2.01 ms.
MinimalModbus debug mode. Response from instrument:  (0 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.a[Kserial.baudrate = 38400
>>> instr.serial.baudrate = 38400[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 10161.84 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument:  (0 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_register(0x0)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 38400[C[C[C[C[C[C[C[C[C[C[5Pread_register(0x0)[C[C[C[C[Kinstr.address = 1
>>> instr.address = 1read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 6965.47 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument:  (0 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): 01 03 00 00 00 01 84 0A (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1097.96 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument:  (0 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_register(0x0)[C[C[C[C[C[C[C[C[C[C[7Paddress = 1[K255
>>> instr.address = 255[C[C[C[C[C[C[C[C[C[Cread_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 3490.02 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1032.25 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 799.24 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 797.04 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 807.00 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1586.20 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 797.58 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1243.32 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 641.58 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 951.46 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1190.03 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1115.87 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1435.53 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 904.57 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 894.38 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 1448.52 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.
instr.address                                instr.read_bits(                             instr.write_bit(
instr.baud                                   instr.read_float(                            instr.write_bits(
instr.clear_buffers_before_each_transaction  instr.read_long(                             instr.write_float(
instr.close_port_after_each_call             instr.read_register(                         instr.write_long(
instr.debug                                  instr.read_registers(                        instr.write_register(
instr.handle_local_echo                      instr.read_string(                           instr.write_registers(
instr.mode                                   instr.roundtrip_time                         instr.write_string(
instr.precalculate_read_size                 instr.serial                                 
instr.read_bit(                              instr.timeout                                
>>> instr.
instr.address                                instr.read_bits(                             instr.write_bit(
instr.baud                                   instr.read_float(                            instr.write_bits(
instr.clear_buffers_before_each_transaction  instr.read_long(                             instr.write_float(
instr.close_port_after_each_call             instr.read_register(                         instr.write_long(
instr.debug                                  instr.read_registers(                        instr.write_register(
instr.handle_local_echo                      instr.read_string(                           instr.write_registers(
instr.mode                                   instr.roundtrip_time                         instr.write_string(
instr.precalculate_read_size                 instr.serial                                 
instr.read_bit(                              instr.timeout                                
>>> instr.timeout
instr.timeout
>>> instr.timeout
instr.timeout
>>> instr.timeout = 1.0
>>> instr.timeout = 1.0[C[C[C[C[C[C[C[C[C[Cread_register(0x0)[C[C[C[C[C[C[C[C[C[C[5Paddress = 255[C[C[C[C[C[C[C[C[C[Cread_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 9608.21 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 10.0 ms.

194
>>> instr.read_register(0x0)[C[C[C[C[C[C[C[C[C[C[5Ptimeout = 1.0[C[1@s[1@e[1@r[1@i[1@a[1@l[1@.
>>> instr.serial.timeout = 1.0[C[C[C[C[C[C[C[C[C[C[2Pread_register(0x0)
MinimalModbus debug mode. Will write to instrument (expecting 7 bytes back): FF 03 00 00 00 01 91 D4 (8 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 14793.67 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 03 02 00 C2 10 01 (7 bytes), roundtrip time: 0.0 ms. Timeout for reading: 1000.0 ms.

194
>>> instr.read_register(0x0)[C[C[C[C[Kinstr.read_register(0x0)[C[C[C[C[Kinstr.seria.l[K[Kl.baudrate = 384[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kinstr.serial.[K[K[K[K[K[K[Kwrite_register(0x01, 0xDEFA)
MinimalModbus debug mode. Will write to instrument (expecting 8 bytes back): FF 10 00 01 00 01 02 DE FA 36 06 (11 bytes)
MinimalModbus debug mode. Clearing serial buffers for port /dev/ttyUSB0
MinimalModbus debug mode. No sleep required before write. Time since previous read: 29775.48 ms, minimum silent period: 1.75 ms.
MinimalModbus debug mode. Response from instrument: FF 10 00 01 00 01 45 D7 (8 bytes), roundtrip time: 0.0 ms. Timeout for reading: 1000.0 ms.

>>> instr.serial.[K[K[K[K[K[K[Kwrit_[Ke_register(0x`[K01, in[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kinstr.debug = 0 
>>> instr.write_register(0x02, 513)
>>> instr.write_register(0x1, 0x5FAF)
>>> instr.w[Kread[K[K[K[Kserial.baudrate= [K19200
>>> instr.serial
Serial<id=0x7f6eb6762860, open=True>(port='/dev/ttyUSB0', baudrate=19200, bytesize=8, parity='N', stopbits=1, timeout=1.0, xonxoff=False, rtscts=False, dsrdtr=False)
>>> instr.read_register(0x1)[K[K1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.address = 1
>>> instr.address = 1read_register(0x1)
3
>>> instr.write_register(0x01, 0xDEFA)
>>> instr.ea[K[Kwrite_register(0x01, [K[K[K2, 0[K79[K69([K)
insTraceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.SlaveReportedException: Slave reported device failure
>>> ins[K[K[Kinstr.read_register(0x2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.SlaveReportedException: Slave reported device failure
>>> instr.read_register)[K(0x1)
0
>>> instr.rwwite[K[K[K[K[K[Kwrite_register(0x1, 0xDEFA)
>>> instr.read_register(0x1)
2
>>> instr.write_register(0x1[K2, 0x[K[K769)
>>> instr.read_register(0x1)[K[K2)
769
>>> instr.write_register(0x1, 0x5f[Kffa)[K[K[KAF)
>>> instr.read[K[K[K[Kseri.[Kal.baudrate = 9600
>>> instr.read_register(0x2)
769
>>> instr.read_register(0x2)[K[K1)
3
>>> instr.read_register(0x1)[K[K2[K[K[K1)[K[K0x1)
3
>>> instr._read_[K[K[K[K[K[KreaD[Kd_register(0x1)[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kwrite_register(0x0000) 0[K[K[K[K[K[K[K2, 0x00)
instr.Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 552, in write_register
    self._generic_command(
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1359, in _perform_command
    payload_from_slave = _extract_payload(
                         ^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1918, in _extract_payload
    _check_response_slaveerrorcode(response)
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 3584, in _check_response_slaveerrorcode
    raise error
minimalmodbus.SlaveReportedException: Slave reported device failure
>>> instr.[K[K[K[Kinst.[K[K[K[K[K[K[Kinstr.write_register(0x1, 0x[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kr[K.read_register(0x1)
3
>>> instr.write_register(0x01,[K[K[K1 [K, 0x0)
>>> instr.read_register(0x1)
0
>>> instr.write_register(0x1, 0xDFA[K[KEFA)
>>> instr.r[Kwrite_[K[K[K[K[K[Kread_register(0x1)
2
>>> instr.W[Kwrite_register(0x1, [K[K[K2, 103[K23)
>>> instr.write_registe[K[Kter(0x1, 0x5FFA[K[K[KAF)
>>> instr._[Kread_register(0x1)
2
>>> instr.write_register[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kinn[Kstr.read_register(0x1)
2
>>> instr.write_register(0x1, 0x5ffa)[K[Kaf[K[K[Kaf)
>>> instr.read_register)[K(0x1)
3
>>> instr.[K[K[K[K[K[Kinstr.read_register(0x1)
3
>>> instr.write_[K[K[K[K[K[Kwrite_register(0x1, [K 0x[K0[K)[K[K0x0)
>>> instr.read_register(0x1)
0
>>> n[Kinstr.writer_re[K[K[K[K[Ke_register(0x1, 0xf5a[K[K[KDEFA)
>>> in[K[Kinstr._t[K[Kwrite_register(0x1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: Instrument.write_register() missing 1 required positional argument: 'value'
>>> instr.wri[K[K[K[K.read_register(0x1, 0x0[K[K[K1[K[K[K)
2
>>> instr.write_register[K[K[K[K[K[K[K[K[K[K[K[K[K[Kread_register(0x2)
769
>>> instr.write_register(0x2, 0x[K[K1023)
>>> instr.read_regsiter(0x2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Instrument' object has no attribute 'read_regsiter'. Did you mean: 'read_register'?
>>> instr_read-[K_regist[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kinstr.read_register(0x1[K2)
769
>>> instr.write_register()0)x)2),) )[1P)[1P)[1P)[1P)1)0)[1P)[1P).)1)[1P)[1P)x)1)[1Pregister(0x1)[1Pregister(0x1)[1Pregister(0x1)[1Pregister(0x1)[1Pegister(0x1)[C[C[C[C[C[C[C[C[C[C[C[1Pregister(0x1)[C[C[C[C[C[C[C[C[C[C[Cregister(0x1)[C[C[C[C[C[C[C[C[C[C[Ceregister(0x1)aregister(0x1)dregister(0x1)_register(0x1)
2
>>> instr.write_register(0x2, 0[K1025)
>>> instr.read_register(x2[K[K2)[K[K1[K2)
1025
>>> n[Kinstr.write_register(0x1, 0x5faf)
>>> instr.read_register(0x1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.serial.baudrate = 4800
>>> instr.read_register(1)
3
>>> instr.write_register(0x2[K1, 0x00)
>>> instr.w[Kread_register(0x1)
0
>>> instr.write_register(0x1o [K[K, 0xdefa)
>>> intr[K[K[Kins[K[K[Kstr.[K[K[K[Knstr.read_register(0x1)
2
>>> instr.write-[K_register(0x1[K2, 1281)
>>> instr._read[K[K[K[K[Kread_register(0x2)
1281
>>> instr.write_register(0x10[K)[K[K[K[K0x1. [K[K, defa0[K)[K[K[K[K[K0xdefa[K[K[K[K[Kx5faf)
>>> instr.read_register(x0[K[K0x1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.serial.baudrate = 2400
>>> instr.read_register(0x1)
3
>>> instr.write_register(0x1, 0x0)
>>> instr.read_register(0x1, 0x0)[K[K[K[K[K[K[K[Kx1)
0
>>> instr.write_register(0x1, 0xDEFA)
>>> instr.read_regsiter)[K(0x1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Instrument' object has no attribute 'read_regsiter'. Did you mean: 'read_register'?
>>> ins[K[K[Kinstr.read_register(0x1)
2
>>> instr.write_register(01x[K[Kx1[K2, 0x[K[K1537)
>>> instr.read_register(0x1)
2
>>> instr.read_register(0x2)
1537
>>> is[Knstr.write_regsiter(0x1, 0x5FFA[K[KAF)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Instrument' object has no attribute 'write_regsiter'. Did you mean: 'write_register'?
>>> instr[K[K[K[K[Kinstr.write_regsiter(0x1, 0x5FAF)[C[1P[1P[1@i[1@s
>>> instr.read_regsiter(0x1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Instrument' object has no attribute 'read_regsiter'. Did you mean: 'read_register'?
>>> instr_read[K[K[K[K[K.read_rei[Kgister(0x1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 484, in read_register
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.serial.baudrate = 1200
>>> instr.read_register(0x1)[K[K[K[K[K(functioncd[Kode/[K/4[K[K=4),functioncode=4)0,functioncode=4)x,functioncode=4)1,functioncode=4)[1P,functioncode=4)0,functioncode=4)
64277
>>> instr.read_register(0x0,functioncode=4)
63254
>>> instr.read_register(0x0,functioncode=4)
16149
>>> instr.read_register(0x0,functioncode=4)
32534
>>> instr.read_register(0x0,functioncode=4)
51990
>>> instr.read_register(0x0,functioncode=4)
6934
>>> instr.read_register(0x0,functioncode=4)
59158
>>> instr.serial.baudrate
1200
>>> instr.serial.baudrate[C[C[C[C[C[C[C[C[C[Cread_register(0x0,functioncode=4)
23318
>>> instr.read_register(0x0,functioncode=4)
39702
>>> instr.read_register(0x0,functioncode=4)
57110
>>> instr.read_register(0x0,functioncode=4)
10006
>>> instr.read_register(0x0,functioncode=4)
26390
>>> instr.read_register(0x0,functioncode=4)
42774
>>> instr.read_register(0x0,functioncode=4)
59158
>>> instr.read_register(0x0,functioncode=4)
8981
>>> instr.read_register(0x0,functioncode=4)
24342
>>> instr.read_register(0x0,functioncode=4)
39702
>>> instr.read_register(0x0,functioncode=4)[C[C[C[C[C[C[C[C[C[C[18Pserial.baudrate[C[C[C[C[C[C[C[C[C[Cread_register(0x0,functioncode=4)[C[C[C[C[K
>>> 
>>> instr.[K.address = 255
>>> instr.serial.baudrate = 3800[K[K[K8600
>>> instr.serial.baudrate = 38600[K[K[K[K8400
>>> instr.sia[Krial[K[K[K[K[Kerial [K[K[K[K[K[K[K[K[K[K[K[K[Kinstr.get[K[K[Kget[K[K[Kgetserial[K[K[K[K[K[K[K[K[Kserial.[K[K[K[K[K[K[K[K.n[Kread_registers(0x01[K0, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.address = 1
>>> instr.sr[Kerial.baur[Kdrate[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kread_[K[K[K[K[Kread_registers(0x00, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.read_registers(0x00, 1)[C[C[C[C[C[C[C[C[C[C[12Paddress = 1read_registers(0x00, 1)[C[C[C[C[C[C[C[C[C[Cserial.baudrate = 38400600400[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
instr.serial
>>> instr.serial
instr.serial
>>> instr.serial.
instr.serial.BAUDRATES                 instr.serial.getRI()                   instr.serial.readline(
instr.serial.BAUDRATE_CONSTANTS        instr.serial.getSettingsDict()         instr.serial.readlines(
instr.serial.BYTESIZES                 instr.serial.get_settings()            instr.serial.reset_input_buffer()
instr.serial.PARITIES                  instr.serial.inWaiting()               instr.serial.reset_output_buffer()
instr.serial.STOPBITS                  instr.serial.in_waiting                instr.serial.ri
instr.serial.applySettingsDict(        instr.serial.interCharTimeout          instr.serial.rs485_mode
instr.serial.apply_settings(           instr.serial.inter_byte_timeout        instr.serial.rts
instr.serial.baudrate                  instr.serial.iread_until(              instr.serial.rtscts
instr.serial.break_condition           instr.serial.isOpen()                  instr.serial.seek(
instr.serial.bytesize                  instr.serial.is_open                   instr.serial.seekable()
instr.serial.cancel_read()             instr.serial.isatty()                  instr.serial.sendBreak(
instr.serial.cancel_write()            instr.serial.name                      instr.serial.send_break(
instr.serial.cd                        instr.serial.nonblocking()             instr.serial.setDTR(
instr.serial.close()                   instr.serial.open()                    instr.serial.setPort(
instr.serial.closed                    instr.serial.out_waiting               instr.serial.setRTS(
instr.serial.cts                       instr.serial.parity                    instr.serial.set_input_flow_control(
instr.serial.dsr                       instr.serial.pipe_abort_read_r         instr.serial.set_low_latency_mode(
instr.serial.dsrdtr                    instr.serial.pipe_abort_read_w         instr.serial.set_output_flow_control(
instr.serial.dtr                       instr.serial.pipe_abort_write_r        instr.serial.stopbits
instr.serial.exclusive                 instr.serial.pipe_abort_write_w        instr.serial.tell()
instr.serial.fd                        instr.serial.port                      instr.serial.timeout
instr.serial.fileno()                  instr.serial.portstr                   instr.serial.truncate(
instr.serial.flush()                   instr.serial.read(                     instr.serial.writable()
instr.serial.flushInput()              instr.serial.read_all()                instr.serial.write(
instr.serial.flushOutput()             instr.serial.read_until(               instr.serial.writeTimeout
instr.serial.getCD()                   instr.serial.readable()                instr.serial.write_timeout
instr.serial.getCTS()                  instr.serial.readall()                 instr.serial.writelines(
instr.serial.getDSR()                  instr.serial.readinto(                 instr.serial.xonxoff
>>> instr.serial.
instr.serial.BAUDRATES                 instr.serial.getRI()                   instr.serial.readline(
instr.serial.BAUDRATE_CONSTANTS        instr.serial.getSettingsDict()         instr.serial.readlines(
instr.serial.BYTESIZES                 instr.serial.get_settings()            instr.serial.reset_input_buffer()
instr.serial.PARITIES                  instr.serial.inWaiting()               instr.serial.reset_output_buffer()
instr.serial.STOPBITS                  instr.serial.in_waiting                instr.serial.ri
instr.serial.applySettingsDict(        instr.serial.interCharTimeout          instr.serial.rs485_mode
instr.serial.apply_settings(           instr.serial.inter_byte_timeout        instr.serial.rts
instr.serial.baudrate                  instr.serial.iread_until(              instr.serial.rtscts
instr.serial.break_condition           instr.serial.isOpen()                  instr.serial.seek(
instr.serial.bytesize                  instr.serial.is_open                   instr.serial.seekable()
instr.serial.cancel_read()             instr.serial.isatty()                  instr.serial.sendBreak(
instr.serial.cancel_write()            instr.serial.name                      instr.serial.send_break(
instr.serial.cd                        instr.serial.nonblocking()             instr.serial.setDTR(
instr.serial.close()                   instr.serial.open()                    instr.serial.setPort(
instr.serial.closed                    instr.serial.out_waiting               instr.serial.setRTS(
instr.serial.cts                       instr.serial.parity                    instr.serial.set_input_flow_control(
instr.serial.dsr                       instr.serial.pipe_abort_read_r         instr.serial.set_low_latency_mode(
instr.serial.dsrdtr                    instr.serial.pipe_abort_read_w         instr.serial.set_output_flow_control(
instr.serial.dtr                       instr.serial.pipe_abort_write_r        instr.serial.stopbits
instr.serial.exclusive                 instr.serial.pipe_abort_write_w        instr.serial.tell()
instr.serial.fd                        instr.serial.port                      instr.serial.timeout
instr.serial.fileno()                  instr.serial.portstr                   instr.serial.truncate(
instr.serial.flush()                   instr.serial.read(                     instr.serial.writable()
instr.serial.flushInput()              instr.serial.read_all()                instr.serial.write(
instr.serial.flushOutput()             instr.serial.read_until(               instr.serial.writeTimeout
instr.serial.getCD()                   instr.serial.readable()                instr.serial.write_timeout
instr.serial.getCTS()                  instr.serial.readall()                 instr.serial.writelines(
instr.serial.getDSR()                  instr.serial.readinto(                 instr.serial.xonxoff
>>> instr.serial.b
instr.serial.baudrate         instr.serial.break_condition  instr.serial.bytesize         
>>> instr.serial.b
instr.serial.baudrate         instr.serial.break_condition  instr.serial.bytesize         
>>> instr.serial.b
instr.serial.baudrate         instr.serial.break_condition  instr.serial.bytesize         
>>> instr.serial.baudrate = 38400
>>> instr.read_regsiters(0.[K, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Instrument' object has no attribute 'read_regsiters'. Did you mean: 'read_registers'?
>>> instr.read_regsiters(0, 1)[1P[1P[1@i[1@s
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> instr.address
instr.address
>>> instr.address
instr.address
>>> instr.address
instr.address
>>> instr.address
instr.address
>>> instr.address
instr.address
>>> instr.address = 1
>>> nistr.a[K[K[K[K[K[K[Kinstr.address = 255
>>> instr.address = 255[2P1read_registers(0, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> exit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>> exit()
[?2004hbrandon@think001:~/projects/miscellaneous-scripts/modbus_test$ python3
[?2004lPython 3.11.2 (main, Mar 13 2023, 12:18:29) [GCC 12.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> instr.[K[K[K[K[K[Kimport minimalmodbus
>>> sv = minimalmodbus.n[K[K.Instrument(([K/[K"/d[Kdev/ttyUSB0" [K, 255)
>>> in[K[Ksv.serial.baudrate = 2[K38400
>>> sv.serial[Kal.[K[K[Kl.timeout = 0.01
>>> sv.read[K[K[K[K[K[K[Ksv.read[K[K[K[K[K[K[Ksv.
sv.address                                sv.read_bits(                             sv.write_bit(
sv.clear_buffers_before_each_transaction  sv.read_float(                            sv.write_bits(
sv.close_port_after_each_call             sv.read_long(                             sv.write_float(
sv.debug                                  sv.read_register(                         sv.write_long(
sv.handle_local_echo                      sv.read_registers(                        sv.write_register(
sv.mode                                   sv.read_string(                           sv.write_registers(
sv.precalculate_read_size                 sv.roundtrip_time                         sv.write_string(
sv.read_bit(                              sv.serial                                 
>>> sv.
sv.address                                sv.read_bits(                             sv.write_bit(
sv.clear_buffers_before_each_transaction  sv.read_float(                            sv.write_bits(
sv.close_port_after_each_call             sv.read_long(                             sv.write_float(
sv.debug                                  sv.read_register(                         sv.write_long(
sv.handle_local_echo                      sv.read_registers(                        sv.write_register(
sv.mode                                   sv.read_string(                           sv.write_registers(
sv.precalculate_read_size                 sv.roundtrip_time                         sv.write_string(
sv.read_bit(                              sv.serial                                 
>>> sv.[K[K[Ksv.read_
sv.read_bit(        sv.read_float(      sv.read_register(   sv.read_string(     
sv.read_bits(       sv.read_long(       sv.read_registers(  
>>> sv.read_
sv.read_bit(        sv.read_float(      sv.read_register(   sv.read_string(     
sv.read_bits(       sv.read_long(       sv.read_registers(  
>>> sv.read_ad[K[Kregisters(0x1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: Instrument.read_registers() missing 1 required positional argument: 'number_of_registers'
>>> sv.read_registers(0x1)[C,) )1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> sv.read_registers(0x1, 1)[1P[1@0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 927, in read_registers
    returnvalue = self._generic_command(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1276, in _generic_command
    payload_from_slave = self._perform_command(functioncode, payload_to_slave)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1353, in _perform_command
    response_bytes = self._communicate(request_bytes, number_of_bytes_to_read)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/brandon/.local/lib/python3.11/site-packages/minimalmodbus.py", line 1521, in _communicate
    raise NoResponseError("No communication with the instrument (no answer)")
minimalmodbus.NoResponseError: No communication with the instrument (no answer)
>>> sv.read_registers(0x0, 1)
[194]
>>> sv.read_registers(0x0, 1)
[194]
>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> [K>>> exit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>> exit()
[?2004hbrandon@think001:~/projects/miscellaneous-scripts/modbus_test$ 
[?2004l[?2004hbrandon@think001:~/projects/miscellaneous-scripts/modbus_test$ 
[?2004l[?2004hbrandon@think001:~/projects/miscellaneous-scripts/modbus_test$ 
[?2004l[?2004hbrandon@think001:~/projects/miscellaneous-scripts/modbus_test$ 
[?2004l[?2004hbrandon@think001:~/projects/miscellaneous-scripts/modbus_test$ 
[?2004l[?2004hbrandon@think001:~/projects/miscellaneous-scripts/modbus_test$ xit
[?2004lbash: xit: command not found
[?2004hbrandon@think001:~/projects/miscellaneous-scripts/modbus_test$ exit
[?2004lexit

Script done on 2023-09-12 02:44:24-07:00 [COMMAND_EXIT_CODE="127"]
